apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    defaultPublishConfig 'release'
//    publishNonDefault true
//    productFlavors {
//        library{
//
//        }
//    }
}
repositories {
    maven {url "https://oss.sonatype.org/content/repositories/snapshots/"}
    maven {url "https://oss.sonatype.org/content/repositories/staging/"}
/*
    maven {
        url "http://nexus.mymobilecoverage.com:8081/nexus/content/repositories/releases"
    }
    */
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'org.restcomm:restcomm-android-qos-sdk-utillib:1.0.3-alpha-1'
    //compile "com.restcomm.app:utillib:1.0.7"
    //compile project(':utillib')

    //compile 'com.scottyab:secure-preferences-lib:0.0.4'
}


// Upload Archives functionality
/*
ext {
    if (!project.hasProperty('nexusUrl')) {
        nexusUrl='http://nexus.mymobilecoverage.com:8081/nexus'
        nexusUsername = ''
        nexusPassword = ''
    }
}
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

        }
    }
}
*/


/**/
// Upload to sonatype stuff
gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            // The rest of the signing properties are set in the global gradle.properties. Reason we keep this path here
            // is that the path needs to be absolute, but yet we want it to be functional both on local and Travis builds.
            // Since there doesn't seem to be a way to add conditional logic in properties files let's do it here
            if (project.hasProperty('SIGNING_SECRET_KEYRING_FULLPATH')) {
                ext."signing.secretKeyRingFile" = SIGNING_SECRET_KEYRING_FULLPATH
            }
            else {
                ext."signing.secretKeyRingFile" = System.properties['user.home'] + "/.gnupg/secring.gpg"
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// TODO: refine it so that it works correctly
//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}


task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    //archives androidJavadocsJar
}

signing {
    sign configurations.archives
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            // Defined at gradle.properties for Olympus project -we might need to move those to be scoped for the library alone
            pom.groupId = "org.restcomm"
            pom.artifactId = "restcomm-android-qos-sdk-mmcextension"
            //pom.version = "1.0.0-beta-4.1"
            pom.version = "1.0.3-alpha-1"  //-SNAPSHOT"

            // remember that releases first go to the staging area
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }

            pom.project {
                name 'Restcomm Android QoS MMC Extension'
                packaging 'aar'
                // optionally artifactId can be defined here
                description 'Middle layer library, placeholder to interchange with non-open-source mmcextension library'
                url 'https://github.com/RestComm/android-QoS'

                scm {
                    connection 'scm:git:https://github.com/RestComm/android-QoS'
                    developerConnection 'scm:git:https://github.com/RestComm/android-QoS'
                    url 'https://github.com/RestComm/android-QoS'
                }

                licenses {
                    license {
                        name 'GNU Affero General Public License, Version 3.0'
                        url 'https://www.gnu.org/licenses/agpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id 'bscheurman'
                        name 'Brad Scheurman'
                        email 'bscheurman@mymobilecoverage.com'
                    }
                }

                contributors {
                    contributor {
                        name 'Antonis Tsakiridis'
                    }
                }

            }
        }
    }
}
/**/